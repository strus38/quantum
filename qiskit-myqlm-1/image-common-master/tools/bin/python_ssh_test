#!/usr/bin/env python3
#
# NIMBIX CONFIDENTIAL
# -------------------
#
# Copyright (c) 2021 Nimbix, Inc.  All Rights Reserved.
#
# NOTICE:  All information contained herein is, and remains the property of
# Nimbix, Inc. and its suppliers, if any.  The intellectual and technical
# concepts contained herein are proprietary to Nimbix, Inc.  and its suppliers
# and may be covered by U.S. and Foreign Patents, patents in process, and are
# protected by trade secret or copyright law.  Dissemination of this
# information or reproduction of this material is strictly forbidden unless
# prior written permission is obtained from Nimbix, Inc.
#
# Author: Leo

# Waits for ssh on all worker nodes in /etc/JARVICE/nodes
#
# Usage:
#    python_ssh_test <max-timeout>

import sys
import signal
import time
from multiprocessing import Pool
from subprocess import Popen, PIPE


def sshtest(host):
    if host:
        timeout = int(sys.argv[1])
        signal.alarm(timeout)
        output = ''
        while output != b'OK\n':
            conn = Popen(['/usr/bin/ssh', host, 'echo OK'],
                         stdout=PIPE, stderr=open('/dev/null', 'w'))
            output = conn.communicate()[0]
    return 'OK'


if __name__ == '__main__':
    with open('/etc/JARVICE/nodes', 'r') as f:
        nodes = f.read().splitlines()
    workers = len(nodes) - 1
    start = time.time()
    if workers:
        signal.alarm(int(sys.argv[1]))
        p = Pool(workers)
        p.map(sshtest, nodes[1:])
    print('Parallel workers ready in %d second(s)' %
          (int(time.time() - start)))
